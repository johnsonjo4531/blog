First of all this tutorial will only be useful if you have a Mac. It
also assumes some very basic familiarity with the command line (I won't
explain how to change directories with cd). But, this article will
explain a few unix and command line features along the way to help you
be more proficient in Unix.


Dependencies

Here are the dependencies used in the article you may or may not need
them Depending on how far you choose to go. Expand the below accordions
to read what the dependencies are for and for installation instructions.

Homebrew Install from homebrew's website.

This is optional I provide other links to downloads. This is a package
manager for mac. It allows you to install programs from the command
line. It makes installing programs quite easy and you will only need it
to install the other dependencies in this blog post.

pandoc

    You'll only need this if your text isn't in plain text. If you have brew
    this should be as simple as:

    Otherwise install pandoc from{" "}
    <a href="https://pandoc.org/installing.html">pandoc's website</a>

ffmpeg

If you installed brew this should be as simple as:

    Otherwise install from <a href="https://ffmpeg.org/">ffmpeg's website</a>.


Intro to Say

Now on to using text to speech commands. The simplest way to use Text To
Speech (TTS) on Mac is through the Mac terminal's say command.

    say 'I can say anything'

Alot can be learned from man pages (man is short for manual). Why don't
we look at say's man page. To get to a commands man page you just type
man followed by a space and then the command. (If a command doesn't have
a manual page then you could get some brief help with the command
generally by typing the command followed by a space and then the --help
flag)

    man say

Scroll down to the options and look at some of them. For example we'll
use the -o flag for output and the -v flag for using different voices We
particularly want to useWhen you are done looking at the manual page hit
q to close it.

As pointed out by the man page, if you want to know all the voices type
use the v flag like so:

    say -v ?

Let's get only the english voices with grep. Here we are using the pipe
command which takes the standard output from one command which here is
the say command and puts it into the standard output for the next
command which here is the grep command:

    say -v ? | grep en_

Let's try Daniel's voice.

    say -v Daniel Hello, my name is Daniel and I am a British-English voice.


Downloading Higher Quality Voices

Some voices (mainly the Siri voices), can't be used from the say
command, but you can download higher quality voices on Mac through the
accesibility options which are located at
System Preferences > Accessibility > Speech. You then click on the
system voice and click customize to download new voices, some of them
will let you check a box with downloading a higher quality voice.


Piping a Text File to Text To Speech.

Let's create a simple text file:

    echo 'Hello World is a common first program.' > helloWorld.txt

The > sign is used for file redirection, notice how the arrow points
toward the file name and away from the command echo this is because it
is redirecting the standard text output from the echo into the file
helloWorld.txt.

If we want the say command to use this helloWorld.txt file we can
redirect the file into the say commands standard input with the < sign.

    say -v Daniel < helloWorld.txt


Converting a Docx file to Plain Text for TTS.

Here's where pandoc will come in handy for converting to and from
document formats. If you don't already have it go back to the top in the
dependencies.

Let's get the man pages for pandoc real quick. If you scroll down to the
'Using pandoc'.

    man pandoc

Also another tip for man pages is to search them you use / and then a
search term; you can then click n to go to the next match and ?+enter to
go to the previous match. Don't forget to hit q to quit the man page.

So, we can output a file out.txt by running:

    pandoc -o output.txt input.docx

We can make it plain text instead of markdown with the -t flag which
stands for type. You can consult the man page for pandoc to see all the
different types the -t flag can take. Here we'll use the plain text
type.

    pandoc -t plain -o output.txt
