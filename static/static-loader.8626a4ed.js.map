{"version":3,"sources":["../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","static-lib/unpkg.com/lit-html@1.1.2/lib/directive.js","static-lib/unpkg.com/lit-html@1.1.2/lib/dom.js","static-lib/unpkg.com/lit-html@1.1.2/lib/part.js","static-lib/unpkg.com/lit-html@1.1.2/lib/template.js","static-lib/unpkg.com/lit-html@1.1.2/lib/template-instance.js","static-lib/unpkg.com/lit-html@1.1.2/lib/template-result.js","static-lib/unpkg.com/lit-html@1.1.2/lib/parts.js","static-lib/unpkg.com/lit-html@1.1.2/lib/default-template-processor.js","static-lib/unpkg.com/lit-html@1.1.2/lib/template-factory.js","static-lib/unpkg.com/lit-html@1.1.2/lib/render.js","static-lib/unpkg.com/lit-html@1.1.2/lit-html.js","static-lib/lit-html.js","static-loader.js","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["directives","WeakMap","directive","f","args","d","set","isDirective","o","has","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","n","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","constructor","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","currentNode","pop","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","previousSibling","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","update","setValue","commit","_clone","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","getHTML","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getTemplateElement","createElement","innerHTML","SVGTemplateResult","svgElement","firstChild","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","_getValue","text","v","t","setAttribute","committer","NodePart","__pendingValue","appendInto","startNode","appendChild","endNode","ref","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","itemParts","itemPart","item","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","DefaultTemplateProcessor","prefix","defaultTemplateProcessor","templateCache","templateCaches","get","stringsArray","keyString","Map","key","join","render","Object","assign","svg","replaceAll","string","items","replacements","reduce","replace","_log","console","log","bind","Log","params","timestamp","types","Console","logItems","map","display","getElementById","consoleOut","Date","toISOString","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","remove","stackTrace","innerText","getParents","modules","parents","k","dep","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,IAAIC,OAAJ,EAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMC,SAAS,GAAGC,CAAC,IAAI,CAAC,GAAGC,IAAJ,KAAa;AACzC,QAAMC,CAAC,GAAGF,CAAC,MAAD,SAAKC,IAAL,CAAV;AACAJ,EAAAA,UAAU,CAACM,GAAX,CAAeD,CAAf,EAAkB,IAAlB;AACA,SAAOA,CAAP;AACD,CAJM;;;;AAKA,MAAME,WAAW,GAAGC,CAAC,IAAI;AAC9B,SAAO,OAAOA,CAAP,KAAa,UAAb,IAA2BR,UAAU,CAACS,GAAX,CAAeD,CAAf,CAAlC;AACD,CAFM;;;;;;;;;AC3DP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACO,MAAME,YAAY,GAAGC,MAAM,CAACC,cAAP,KAA0BC,SAA1B,IAC5BF,MAAM,CAACC,cAAP,CAAs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","file":"static-loader.8626a4ed.js","sourceRoot":"../src-static","sourcesContent":["function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n                                   * Brands a function as a directive factory function so that lit-html will call\n                                   * the function during template rendering, rather than passing as a value.\n                                   *\n                                   * A _directive_ is a function that takes a Part as an argument. It has the\n                                   * signature: `(part: Part) => void`.\n                                   *\n                                   * A directive _factory_ is a function that takes arguments for data and\n                                   * configuration and returns a directive. Users of directive usually refer to\n                                   * the directive factory as the directive. For example, \"The repeat directive\".\n                                   *\n                                   * Usually a template author will invoke a directive factory in their template\n                                   * with relevant arguments, which will then return a directive function.\n                                   *\n                                   * Here's an example of using the `repeat()` directive factory that takes an\n                                   * array and a function to render an item:\n                                   *\n                                   * ```js\n                                   * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n                                   * ```\n                                   *\n                                   * When `repeat` is invoked, it returns a directive function that closes over\n                                   * `items` and the template function. When the outer template is rendered, the\n                                   * return directive function is called with the Part for the expression.\n                                   * `repeat` then performs it's custom logic to render multiple items.\n                                   *\n                                   * @param f The directive factory function. Must be a function that returns a\n                                   * function of the signature `(part: Part) => void`. The returned function will\n                                   * be called with the part object.\n                                   *\n                                   * @example\n                                   *\n                                   * import {directive, html} from 'lit-html';\n                                   *\n                                   * const immutable = directive((v) => (part) => {\n                                   *   if (part.value !== v) {\n                                   *     part.setValue(v)\n                                   *   }\n                                   * });\n                                   */\nexport const directive = f => (...args) => {\n  const d = f(...args);\n  directives.set(d, true);\n  return d;\n};\nexport const isDirective = o => {\n  return typeof o === 'function' && directives.has(o);\n};","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     * True if the custom elements polyfill is in use.\n     */\nexport const isCEPolyfill = window.customElements !== undefined &&\nwindow.customElements.polyfillWrapFlushCallback !==\nundefined;\n/**\n            * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n            * into another container (could be the same container), before `before`. If\n            * `before` is null, it appends the nodes to the container.\n            */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n  while (start !== end) {\n    const n = start.nextSibling;\n    container.insertBefore(start, before);\n    start = n;\n  }\n};\n/**\n    * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n    * `container`.\n    */\nexport const removeNodes = (container, start, end = null) => {\n  while (start !== end) {\n    const n = start.nextSibling;\n    container.removeChild(start);\n    start = n;\n  }\n};","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     * A sentinel value that signals that a value was handled by a directive and\n     * should not be written to the DOM.\n     */\nexport const noChange = {};\n/**\n                             * A sentinel value that signals a NodePart to fully clear its content.\n                             */\nexport const nothing = {};","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     * An expression marker with embedded unique key to avoid collision with\n     * possible text in templates.\n     */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n                                                                    * An expression marker used text-positions, multi-binding attributes, and\n                                                                    * attributes with markup-like text values.\n                                                                    */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n                                                                   * Suffix appended to all bound attribute names.\n                                                                   */\nexport const boundAttributeSuffix = '$lit$';\n/**\n                                              * An updateable Template that tracks the location of dynamic parts.\n                                              */\nexport class Template {\n  constructor(result, element) {\n    this.parts = [];\n    this.element = element;\n    const nodesToRemove = [];\n    const stack = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const { strings, values: { length } } = result;\n    while (partIndex < length) {\n      const node = walker.nextNode();\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop();\n        continue;\n      }\n      index++;\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n          if (node.hasAttributes()) {\n            const attributes = node.attributes;\n            const { length } = attributes;\n            // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondence between part index and attribute index.\n            let count = 0;\n            for (let i = 0; i < length; i++) {\n              if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                count++;\n              }\n            }\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              const stringForPart = strings[partIndex];\n              // Find the attribute name\n              const name = lastAttributeNameRegex.exec(stringForPart)[2];\n              // Find the corresponding attribute\n              // All bound attributes have had a suffix added in\n              // TemplateResult#getHTML to opt out of special attribute\n              // handling. To look up the attribute value we also need to add\n              // the suffix.\n              const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n              const attributeValue = node.getAttribute(attributeLookupName);\n              node.removeAttribute(attributeLookupName);\n              const statics = attributeValue.split(markerRegex);\n              this.parts.push({ type: 'attribute', index, name, strings: statics });\n              partIndex += statics.length - 1;\n            }\n          }\n          if (node.tagName === 'TEMPLATE') {\n            stack.push(node);\n            walker.currentNode = node.content;\n          }\n        } else\n      if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n          const data = node.data;\n          if (data.indexOf(marker) >= 0) {\n            const parent = node.parentNode;\n            const strings = data.split(markerRegex);\n            const lastIndex = strings.length - 1;\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            for (let i = 0; i < lastIndex; i++) {\n              let insert;\n              let s = strings[i];\n              if (s === '') {\n                insert = createMarker();\n              } else\n              {\n                const match = lastAttributeNameRegex.exec(s);\n                if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                  s = s.slice(0, match.index) + match[1] +\n                  match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                }\n                insert = document.createTextNode(s);\n              }\n              parent.insertBefore(insert, node);\n              this.parts.push({ type: 'node', index: ++index });\n            }\n            // If there's no text, we must insert a comment to mark our place.\n            // Else, we can trust it will stick around after cloning.\n            if (strings[lastIndex] === '') {\n              parent.insertBefore(createMarker(), node);\n              nodesToRemove.push(node);\n            } else\n            {\n              node.data = strings[lastIndex];\n            }\n            // We have a part for each match found\n            partIndex += lastIndex;\n          }\n        } else\n      if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n          if (node.data === marker) {\n            const parent = node.parentNode;\n            // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * The previousSibling is already the start of a previous part\n            if (node.previousSibling === null || index === lastPartIndex) {\n              index++;\n              parent.insertBefore(createMarker(), node);\n            }\n            lastPartIndex = index;\n            this.parts.push({ type: 'node', index });\n            // If we don't have a nextSibling, keep this node so we have an end.\n            // Else, we can remove it to save future costs.\n            if (node.nextSibling === null) {\n              node.data = '';\n            } else\n            {\n              nodesToRemove.push(node);\n              index--;\n            }\n            partIndex++;\n          } else\n          {\n            let i = -1;\n            while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              this.parts.push({ type: 'node', index: -1 });\n              partIndex++;\n            }\n          }\n        }\n    }\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode.removeChild(n);\n    }\n  }}\n\nconst endsWith = (str, suffix) => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = part => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n                                                               * This regex extracts the attribute name preceding an attribute-position\n                                                               * expression. It does this by matching the syntax allowed for attributes\n                                                               * against the string literal directly preceding the expression, assuming that\n                                                               * the expression is in an attribute-value position.\n                                                               *\n                                                               * See attributes in the HTML spec:\n                                                               * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n                                                               *\n                                                               * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n                                                               * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n                                                               *\n                                                               * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n                                                               * space character except \" \".\n                                                               *\n                                                               * So an attribute is:\n                                                               *  * The name: any character except a control character, space character, ('),\n                                                               *    (\"), \">\", \"=\", or \"/\"\n                                                               *  * Followed by zero or more space characters\n                                                               *  * Followed by \"=\"\n                                                               *  * Followed by zero or more space characters\n                                                               *  * Followed by:\n                                                               *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n                                                               *    * (\") then any non-(\"), or\n                                                               *    * (') then any non-(')\n                                                               */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     * @module lit-html\n     */\nimport { isCEPolyfill } from \"./dom.js\";\nimport { isTemplatePartActive } from \"./template.js\";\n/**\n                                                              * An instance of a `Template` that can be attached to the DOM and updated\n                                                              * with new values.\n                                                              */\nexport class TemplateInstance {\n  constructor(template, processor, options) {\n    this.__parts = [];\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n  update(values) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n  _clone() {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n    const fragment = isCEPolyfill ?\n    this.template.element.content.cloneNode(true) :\n    document.importNode(this.template.element.content, true);\n    const stack = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node.nodeName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = node.content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop();\n          node = walker.nextNode();\n        }\n      }\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node.previousSibling);\n        this.__parts.push(part);\n      } else\n      {\n        this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }}","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     * @module lit-html\n     */\nimport { reparentNodes } from \"./dom.js\";\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from \"./template.js\";\nconst commentMarker = ` ${marker} `;\n/**\n                                      * The return type of `html`, which holds a Template and the values from\n                                      * interpolated expressions.\n                                      */\nexport class TemplateResult {\n  constructor(strings, values, type, processor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n  /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n  getHTML() {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n      s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else\n      {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n        attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n        marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n  getTemplateElement() {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }}\n\n/**\n      * A TemplateResult for SVG fragments.\n      *\n      * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n      * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n      * clones only container the original fragment.\n      */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML() {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n  getTemplateElement() {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }}","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     * @module lit-html\n     */\nimport { isDirective } from \"./directive.js\";\nimport { removeNodes } from \"./dom.js\";\nimport { noChange, nothing } from \"./part.js\";\nimport { TemplateInstance } from \"./template-instance.js\";\nimport { TemplateResult } from \"./template-result.js\";\nimport { createMarker } from \"./template.js\";\nexport const isPrimitive = value => {\n  return value === null ||\n  !(typeof value === 'object' || typeof value === 'function');\n};\nexport const isIterable = value => {\n  return Array.isArray(value) ||\n  // tslint:disable-next-line:no-any\n  !!(value && value[Symbol.iterator]);\n};\n/**\n    * Writes attribute values to the DOM for a group of AttributeParts bound to a\n    * single attibute. The value is only set once even if there are multiple parts\n    * for an attribute.\n    */\nexport class AttributeCommitter {\n  constructor(element, name, strings) {\n    this.dirty = true;\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      this.parts[i] = this._createPart();\n    }\n  }\n  /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n  _createPart() {\n    return new AttributePart(this);\n  }\n  _getValue() {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else\n        {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n    text += strings[l];\n    return text;\n  }\n  commit() {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue());\n    }\n  }}\n\n/**\n      * A Part that controls all or part of an attribute value.\n      */\nexport class AttributePart {\n  constructor(committer) {\n    this.value = undefined;\n    this.committer = committer;\n  }\n  setValue(value) {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }}\n\n/**\n      * A Part that controls a location within a Node tree. Like a Range, NodePart\n      * has start and end locations and can set and update the Nodes between those\n      * locations.\n      *\n      * NodeParts support several value types: primitives, Nodes, TemplateResults,\n      * as well as arrays and iterables of those types.\n      */\nexport class NodePart {\n  constructor(options) {\n    this.value = undefined;\n    this.__pendingValue = undefined;\n    this.options = options;\n  }\n  /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n  appendInto(container) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n  /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n  insertAfterNode(ref) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling;\n  }\n  /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n  appendIntoPart(part) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n  /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n  insertAfterPart(ref) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n  setValue(value) {\n    this.__pendingValue = value;\n  }\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else\n    if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else\n    if (value instanceof Node) {\n      this.__commitNode(value);\n    } else\n    if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else\n    if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else\n    {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n  __insert(node) {\n    this.endNode.parentNode.insertBefore(node, this.endNode);\n  }\n  __commitNode(value) {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n  __commitText(value) {\n    const node = this.startNode.nextSibling;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString = typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n    node.nodeType === 3 /* Node.TEXT_NODE */) {\n        // If we only have a single text node between the markers, we can just\n        // set its value, rather than replacing it.\n        // TODO(justinfagnani): Can we just check if this.value is primitive?\n        node.data = valueAsString;\n      } else\n    {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n  __commitTemplateResult(value) {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n    this.value.template === template) {\n      this.value.update(value.values);\n    } else\n    {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance = new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n  __commitIterable(value) {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value;\n    let partIndex = 0;\n    let itemPart;\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else\n        {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n  clear(startNode = this.startNode) {\n    removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n  }}\n\n/**\n      * Implements a boolean attribute, roughly as defined in the HTML\n      * specification.\n      *\n      * If the value is truthy, then the attribute is present with a value of\n      * ''. If the value is falsey, the attribute is removed.\n      */\nexport class BooleanAttributePart {\n  constructor(element, name, strings) {\n    this.value = undefined;\n    this.__pendingValue = undefined;\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error('Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n  setValue(value) {\n    this.__pendingValue = value;\n  }\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else\n      {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }}\n\n/**\n      * Sets attribute values for PropertyParts, so that the value is only set once\n      * even if there are multiple parts for a property.\n      *\n      * If an expression controls the whole property value, then the value is simply\n      * assigned to the property under control. If there are string literals or\n      * multiple expressions, then the strings are expressions are interpolated into\n      * a string first.\n      */\nexport class PropertyCommitter extends AttributeCommitter {\n  constructor(element, name, strings) {\n    super(element, name, strings);\n    this.single =\n    strings.length === 2 && strings[0] === '' && strings[1] === '';\n  }\n  _createPart() {\n    return new PropertyPart(this);\n  }\n  _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n  commit() {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      this.element[this.name] = this._getValue();\n    }\n  }}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    } };\n\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n  constructor(element, eventName, eventContext) {\n    this.value = undefined;\n    this.__pendingValue = undefined;\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = e => this.handleEvent(e);\n  }\n  setValue(value) {\n    this.__pendingValue = value;\n  }\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n    oldListener != null && (\n    newListener.capture !== oldListener.capture ||\n    newListener.once !== oldListener.once ||\n    newListener.passive !== oldListener.passive);\n    const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange;\n  }\n  handleEvent(event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else\n    {\n      this.value.handleEvent(event);\n    }\n  }}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = o => o && (\neventOptionsSupported ?\n{ capture: o.capture, passive: o.passive, once: o.once } :\no.capture);","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from \"./parts.js\";\n/**\n                                                                                                                       * Creates Parts when a template is instantiated.\n                                                                                                                       */\nexport class DefaultTemplateProcessor {\n  /**\n                                        * Create parts for an attribute-position binding, given the event, attribute\n                                        * name, and string literals.\n                                        *\n                                        * @param element The element containing the binding\n                                        * @param name  The attribute name\n                                        * @param strings The string literals. There are always at least two strings,\n                                        *   event for fully-controlled bindings with a single expression.\n                                        */\n  handleAttributeExpressions(element, name, strings, options) {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n  handleTextExpression(options) {\n    return new NodePart(options);\n  }}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from \"./template.js\";\n/**\n                                                          * The default TemplateFactory which caches Templates keyed on\n                                                          * result.type and result.strings.\n                                                          */\nexport function templateFactory(result) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap(),\n      keyString: new Map() };\n\n    templateCaches.set(result.type, templateCache);\n  }\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\nexport const templateCaches = new Map();","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     * @module lit-html\n     */\nimport { removeNodes } from \"./dom.js\";\nimport { NodePart } from \"./parts.js\";\nimport { templateFactory } from \"./template-factory.js\";\nexport const parts = new WeakMap();\n/**\n                                     * Renders a template result or other value to a container.\n                                     *\n                                     * To update a container with new values, reevaluate the template literal and\n                                     * call `render` with the new result.\n                                     *\n                                     * @param result Any value renderable by NodePart - typically a TemplateResult\n                                     *     created by evaluating a template tag like `html` or `svg`.\n                                     * @param container A DOM parent to render to. The entire contents are either\n                                     *     replaced, or efficiently updated if the same result type was previous\n                                     *     rendered there.\n                                     * @param options RenderOptions for the entire render tree rendered to this\n                                     *     container. Render options must *not* change between renders to the same\n                                     *     container, as those changes will not effect previously rendered DOM.\n                                     */\nexport const render = (result, container, options) => {\n  let part = parts.get(container);\n  if (part === undefined) {\n    removeNodes(container, container.firstChild);\n    parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n    part.appendInto(container);\n  }\n  part.setValue(result);\n  part.commit();\n};","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n     *\n     * Main lit-html module.\n     *\n     * Main exports:\n     *\n     * -  [[html]]\n     * -  [[svg]]\n     * -  [[render]]\n     *\n     * @module lit-html\n     * @preferred\n     */\n/**\n         * Do not remove this comment; it keeps typedoc from misplacing the module\n         * docs.\n         */\nimport { defaultTemplateProcessor } from \"./lib/default-template-processor.js\";\nimport { SVGTemplateResult, TemplateResult } from \"./lib/template-result.js\";\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from \"./lib/default-template-processor.js\";\nexport { directive, isDirective } from \"./lib/directive.js\";\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from \"./lib/dom.js\";\nexport { noChange, nothing } from \"./lib/part.js\";\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from \"./lib/parts.js\";\nexport { parts, render } from \"./lib/render.js\";\nexport { templateCaches, templateFactory } from \"./lib/template-factory.js\";\nexport { TemplateInstance } from \"./lib/template-instance.js\";\nexport { SVGTemplateResult, TemplateResult } from \"./lib/template-result.js\";\nexport { createMarker, isTemplatePartActive, Template } from \"./lib/template.js\";\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n                                                                                * Interprets a template literal as an HTML template that can efficiently\n                                                                                * render to and update a container.\n                                                                                */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n                                                                                                                    * Interprets a template literal as an SVG template that can efficiently\n                                                                                                                    * render to and update a container.\n                                                                                                                    */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);","// eslint-disable-next-line\nexport * from \"./unpkg.com/lit-html@1.1.2/lit-html\";","import { html, render } from \"./static-lib/lit-html.js\";\nfunction replaceAll(string, items, replacements) {\n\treturn items.reduce(\n\t\t(string, item, i) => string.replace(item, replacements[i]),\n\t\tstring\n\t);\n}\nconst _log = console.log.bind(console);\nfunction Log(item) {\n\t_log(...item.params);\n\treturn html`\n\t\t<style>\n\t\t\t.logItem {\n\t\t\t\t--border: 1px solid black;\n\t\t\t\tborder-top: var(--border);\n\t\t\t\tborder-bottom: var(--border);\n\t\t\t\tpadding: 0.25em;\n\t\t\t}\n\t\t\t.console-time {\n\t\t\t\tcolor: #888;\n\t\t\t\tfloat: right;\n\t\t\t}\n\t\t</style>\n\t\t<div class=\"logItem\">\n\t\t\t<span class=\"console-time\">${item.timestamp}</span\n\t\t\t><span\n\t\t\t\t>${replaceAll(\n\t\t\t\t\titem.params.join(\" \"),\n\t\t\t\t\t[\"&\", \"<\", \">\", '\"', \"'\", \"=\"],\n\t\t\t\t\t[\"&amp;\", \"&lt;\", \"&gt\", \"&quot;\", \"&apos;\", \"&eq;\"]\n\t\t\t\t)}</span\n\t\t\t>\n\t\t</div>\n\t`;\n}\nconst types = new Map([[\"log\", Log]]);\nfunction Console(logItems) {\n\treturn html`\n\t\t<style>\n\t\t\t.logging-interface {\n\t\t\t\tmax-height: 25vh;\n\t\t\t\theight: 200px;\n\t\t\t\tposition: fixed;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tbackground-color: #ddd;\n\t\t\t\tcolor: black;\n\t\t\t\toverflow-y: auto;\n\t\t\t\toverflow-x: hidden;\n\t\t\t}\n\t\t</style>\n\t\t<div class=\"logging-interface\">\n\t\t\t${logItems.map(item => types.get(item.type)(item))}\n\t\t</div>\n\t`;\n}\nfunction display(logItems) {\n\trender(Console(logItems), document.getElementById(\"logger-interface\"));\n}\nconst logItems = [];\nwindow.consoleOut = (type = \"log\") => (...params) => {\n\tlogItems.push({\n\t\ttype,\n\t\tparams,\n\t\ttimestamp: new Date().toISOString(),\n\t});\n\tdisplay(logItems);\n};\n\nwindow.console.log = consoleOut(\"log\");\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}